services:
  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: scheduler
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Redis for BullMQ
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Scheduler API and Worker
  scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - POSTGRES_URL=postgresql://postgres:postgres@postgres:5432/scheduler?sslmode=disable
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PORT=3000
      - NODE_ENV=development 
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./src:/app/src
      - ./package.json:/app/package.json
      - ./bun.lock:/app/bun.lock
      - ./tsconfig.json:/app/tsconfig.json
      - ./.env:/app/.env # matches local .env
    command: >
      sh -c "bun install && 
            echo 'Running database initialization...' && 
            bun run db:init && 
            echo 'Starting application...' && 
            bun run --watch src/index.ts & 
            bun run --watch src/worker.ts & 
            wait"

volumes:
  postgres_data:
  redis_data:
